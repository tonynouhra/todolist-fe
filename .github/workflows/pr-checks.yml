name: PR Quality Checks

on:
  pull_request:
    branches: [main, develop, staging]

env:
  NODE_VERSION: '20.x'

jobs:
  pr-quality:
    name: PR Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎨 Prettier Check
        run: npx prettier --check "src/**/*.{ts,tsx,json,css,md}"

      - name: 🔍 ESLint
        run: npm run lint

      - name: 📝 TypeScript
        run: npx tsc --noEmit

      - name: 🧪 Tests with Coverage
        run: npm test -- --coverage --watchAll=false --passWithNoTests
        env:
          CI: true

      - name: 📊 Coverage Comment
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ./coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          delete-old-comments: true

      - name: 🔍 Check for console.log
        run: |
          if grep -r "console\." src/ --include="*.ts" --include="*.tsx" | grep -v "// eslint-disable" | grep -v "test\." | grep -v "__tests__"; then
            echo "❌ Found console.log statements. Please remove them."
            exit 1
          fi
          echo "✅ No console.log statements found"

      - name: 📦 Build Check
        run: npm run build
        env:
          REACT_APP_API_URL: http://localhost:8000
          REACT_APP_CLERK_PUBLISHABLE_KEY: pk_test_placeholder
          CI: false

      - name: 📏 Bundle Size Check
        run: |
          SIZE_MB=$(du -sm build | cut -f1)
          echo "📦 Bundle size: ${SIZE_MB}MB"

          THRESHOLD=5
          if [ $SIZE_MB -gt $THRESHOLD ]; then
            echo "::warning::Bundle size (${SIZE_MB}MB) is approaching threshold (${THRESHOLD}MB)"
          fi

      - name: 💬 PR Summary Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;

            const body = `## 🔍 PR Quality Check Results

            ### 📊 Code Coverage
            | Metric | Coverage |
            |--------|----------|
            | Lines | ${total.lines.pct}% |
            | Statements | ${total.statements.pct}% |
            | Functions | ${total.functions.pct}% |
            | Branches | ${total.branches.pct}% |

            ### ✅ Checks Passed
            - ✅ Code formatting (Prettier)
            - ✅ Linting (ESLint)
            - ✅ Type checking (TypeScript)
            - ✅ Unit tests
            - ✅ Build successful

            ---
            *Automated PR check by GitHub Actions*
            `;

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('PR Quality Check Results')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
